<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Junqson</title>
  <subtitle>Fighting For Future</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.junqson.xin/"/>
  <updated>2018-07-25T05:56:41.437Z</updated>
  <id>http://www.junqson.xin/</id>
  
  <author>
    <name>Junqson</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>图片视频转字符画</title>
    <link href="http://www.junqson.xin/2018/07/25/%E5%9B%BE%E7%89%87%E8%A7%86%E9%A2%91%E8%BD%AC%E5%AD%97%E7%AC%A6%E7%94%BB/"/>
    <id>http://www.junqson.xin/2018/07/25/图片视频转字符画/</id>
    <published>2018-07-25T05:12:00.000Z</published>
    <updated>2018-07-25T05:56:41.437Z</updated>
    
    <content type="html"><![CDATA[<p>趁着暑期有点时间，还是应该静下心来写点东西的，更新一下好久不更的博客。几个月前研究的东西，现在整理一下。</p>
<h3 id="1-原理"><a href="#1-原理" class="headerlink" title="1. 原理"></a>1. 原理</h3><p>读取图片或视频中的某一帧中的抽样像素点，获取rgb值，根据彩色转灰度的心理学公式:</p>
<blockquote>
<p>Gray = R<em>0.299 + G</em>0.587 + B*0.114<br></p>
</blockquote>
<p>计算出灰度值g,然后将灰度g映射到字符c(g),打印输出</p>
<blockquote>
<p><img src="/img/charmap.jpg" alt="效果图"></p>
</blockquote>
<h3 id="2-实现（canvas-js）"><a href="#2-实现（canvas-js）" class="headerlink" title="2. 实现（canvas + js）"></a>2. 实现（canvas + js）</h3><h4 id="1-界面部分（略去css和其他部分）"><a href="#1-界面部分（略去css和其他部分）" class="headerlink" title="(1) 界面部分（略去css和其他部分）"></a>(1) 界面部分（略去css和其他部分）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//获取图片表单</div><div class="line">&lt;div class=&quot;bt&quot;&gt;</div><div class="line">	&lt;form id=&quot;uf&quot;&gt;</div><div class="line">        &lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;up-button&quot;/&gt;</div><div class="line">        &lt;input type=&quot;button&quot; id=&quot;button&quot; value=&quot;选择图片&quot;/&gt;</div><div class="line">    &lt;/form&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">//在css中隐藏的canvas，用以绘制图片，获取像素</div><div class="line">&lt;canvas id=&quot;cv&quot;&gt;not support ie23333&lt;/canvas&gt;</div><div class="line">//字符画展示区</div><div class="line">&lt;div id=&quot;txt&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>
<h4 id="2-js实现"><a href="#2-js实现" class="headerlink" title="(2) js实现"></a>(2) js实现</h4><h5 id="初始工作"><a href="#初始工作" class="headerlink" title="初始工作"></a>初始工作</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var cv = document.getElementById(&apos;cv&apos;);</div><div class="line">var c = cv.getContext(&apos;2d&apos;);</div><div class="line">var txtDiv = document.getElementById(&apos;txt&apos;);</div><div class="line">var fileBtn = document.getElementById(&quot;up-button&quot;);</div><div class="line">var img = new Image();</div><div class="line">img.src = &apos;abn.jpg&apos;;</div><div class="line">img.onload = init; // 图片加载完开始转换</div><div class="line">fileBtn.onchange = getImg; //绑定获取图片事件</div></pre></td></tr></table></figure>
<h5 id="计算灰度g-f-r-g-b"><a href="#计算灰度g-f-r-g-b" class="headerlink" title="计算灰度g=f(r,g,b)"></a>计算灰度g=f(r,g,b)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// 根据rgb值计算灰度</div><div class="line">function getGray(r, g, b) &#123;</div><div class="line">	return 0.299 * r + 0.578 * g + 0.114 * b; //对于彩色转灰度，有一个很著名的心理学公式：Gray = R*0.299 + G*0.587 + B*0.114</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="映射规则c-c-g"><a href="#映射规则c-c-g" class="headerlink" title="映射规则c=c(g)"></a>映射规则c=c(g)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">// 根据灰度生成相应字符</div><div class="line">function toText(g) &#123;</div><div class="line">	if (g &lt;= 30) &#123;</div><div class="line">		return &apos;8&apos;;</div><div class="line">	&#125; else if (g &gt; 30 &amp;&amp; g &lt;= 60) &#123;</div><div class="line">		return &apos;&amp;&apos;;</div><div class="line">	&#125; else if (g &gt; 60 &amp;&amp; g &lt;= 120) &#123;</div><div class="line">		return &apos;$&apos;;</div><div class="line">	&#125;  else if (g &gt; 120 &amp;&amp; g &lt;= 150) &#123;</div><div class="line">		return &apos;*&apos;;</div><div class="line">	&#125; else if (g &gt; 150 &amp;&amp; g &lt;= 180) &#123;</div><div class="line">		return &apos;o&apos;;</div><div class="line">	&#125; else if (g &gt; 180 &amp;&amp; g &lt;= 210) &#123;</div><div class="line">		return &apos;!&apos;;</div><div class="line">	&#125; else if (g &gt; 210 &amp;&amp; g &lt;= 240) &#123;</div><div class="line">		return &apos;;&apos;;</div><div class="line">	&#125;  else &#123;</div><div class="line">		return &apos;.&apos;;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="获取图片"><a href="#获取图片" class="headerlink" title="获取图片"></a>获取图片</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function getImg(file) &#123;</div><div class="line">	var reader = new FileReader();</div><div class="line">	reader.readAsDataURL(fileBtn.files[0]);</div><div class="line">	reader.onload = function () &#123;</div><div class="line">		img.src = reader.result;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="主方法"><a href="#主方法" class="headerlink" title="主方法"></a>主方法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">// 转换</div><div class="line">function init() &#123;</div><div class="line">	//展示区同图片大小</div><div class="line">	txtDiv.style.width = img.width + &apos;px&apos;;</div><div class="line">	cv.width = img.width;</div><div class="line">	cv.height = img.height;</div><div class="line">	//绘制图片</div><div class="line">	c.drawImage(img, 0, 0);</div><div class="line">	//获取像素数据</div><div class="line">	var imgData = c.getImageData(0, 0, img.width, img.height);</div><div class="line">	//获取像素rgba值一维数组</div><div class="line">	var imgDataArr = imgData.data; </div><div class="line">	//横向像素数</div><div class="line">	var imgDataWidth = imgData.width; </div><div class="line">	//纵向像素数</div><div class="line">	var imgDataHeight = imgData.height; </div><div class="line">	var html = &apos;&apos;;</div><div class="line">	//每12行每6列取一个像素，保证原图与生成的图片的大小一致 网页一个字符的默认大小6px * 12px。参数数值可以修改，但是要确保比例必须保证delta h: delta w = 2:1</div><div class="line">	for (h = 0; h &lt; imgDataHeight; h += 12) &#123; </div><div class="line">		var p = &apos;&lt;p&gt;&apos;;</div><div class="line">		for (w = 0; w &lt; imgDataWidth; w += 6) &#123;</div><div class="line">			var index = (w + imgDataWidth * h) * 4; //获取该像素在数组中的r对应的索引，下标从0开始</div><div class="line">			var r = imgDataArr[index + 0];</div><div class="line">			var g = imgDataArr[index + 1];</div><div class="line">			var b = imgDataArr[index + 2];</div><div class="line">			var gray = getGray(r, g, b);//计算灰度值</div><div class="line">			p += toText(gray); </div><div class="line">		&#125;</div><div class="line">		p += &apos;&lt;/p&gt;&apos;;</div><div class="line">		html += p;</div><div class="line">	&#125;</div><div class="line">	txtDiv.innerHTML = html;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<h3 id="3-视频的转换"><a href="#3-视频的转换" class="headerlink" title="3. 视频的转换"></a>3. 视频的转换</h3><p>以上实现了对于图片的字符画转化，对于视频，只需要在图片的基础上，按照一定的频率对视频帧取样，绘制到canvas即可。</p>
<p>在界面中，替换掉form</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;p&gt;要使用的视频：&lt;/p&gt;</div><div class="line">&lt;video id=&quot;video1&quot; controls autoplay src=&quot;hx.mp4&quot; width=&quot;270px&quot;&gt;&lt;/video&gt;</div><div class="line">&lt;p&gt;画布（每 20 毫秒，代码就会绘制视频的当前帧）：&lt;/p&gt;</div></pre></td></tr></table></figure>
<p>监听video的play事件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">var v = document.getElementById(&quot;video1&quot;);</div><div class="line">//获取视频宽高</div><div class="line">var width = v.style.width;</div><div class="line">var height = v.style.height; </div><div class="line"></div><div class="line">v.addEventListener(&apos;play&apos;, function() &#123;</div><div class="line">    var i = window.setInterval(function() &#123;</div><div class="line">        c.drawImage(v, 0, 0, width, height)</div><div class="line">        init();</div><div class="line">    &#125;, 20);</div><div class="line">&#125;, false);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;趁着暑期有点时间，还是应该静下心来写点东西的，更新一下好久不更的博客。几个月前研究的东西，现在整理一下。&lt;/p&gt;
&lt;h3 id=&quot;1-原理&quot;&gt;&lt;a href=&quot;#1-原理&quot; class=&quot;headerlink&quot; title=&quot;1. 原理&quot;&gt;&lt;/a&gt;1. 原理&lt;/h3&gt;&lt;p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://www.junqson.xin/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://www.junqson.xin/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="canvas" scheme="http://www.junqson.xin/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>java内部类总结</title>
    <link href="http://www.junqson.xin/2017/12/10/java%E5%86%85%E9%83%A8%E7%B1%BB%E6%80%BB%E7%BB%93/"/>
    <id>http://www.junqson.xin/2017/12/10/java内部类总结/</id>
    <published>2017-12-10T02:29:17.000Z</published>
    <updated>2018-07-25T07:03:29.780Z</updated>
    
    <content type="html"><![CDATA[<h4 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h4><ol>
<li><h5 id="成员内部类"><a href="#成员内部类" class="headerlink" title="成员内部类"></a>成员内部类</h5></li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">class Outer&#123;</div><div class="line">    class inner&#123;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>编译后产生outer.class和outer$inner.class</li>
</ul>
<ol>
<li><h5 id="方法内部类"><a href="#方法内部类" class="headerlink" title="方法内部类"></a>方法内部类</h5></li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">class outer&#123;</div><div class="line">    public void doSomething()&#123;</div><div class="line">        class inner&#123;</div><div class="line">            public void seeOuter()&#123;</div><div class="line">                </div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>方法内部类只能由该方法实例化</li>
<li>方法内部类对象无法使用方法内非final变量</li>
<li>因为方法的局部变量位于栈上，只存在于该方法的生命期内。当一个方法结束，其栈结构被删除，局部变量成为历史。但是该方法结束之后，在方法内创建的内部类对象可能仍然存在于堆中！例如，如果对它的引用被传递到其他某些代码，并存储在一个成员变量内。正因为不能保证局部变量的存活期和方法内部类对象的一样长，所以内部类对象不能使用它们。</li>
</ul>
<ol>
<li><h5 id="静态嵌套类"><a href="#静态嵌套类" class="headerlink" title="静态嵌套类"></a>静态嵌套类</h5></li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">class outer&#123;</div><div class="line">    static class inner&#123;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    class test&#123;</div><div class="line">        public static void main(String[] args)&#123;</div><div class="line">            Outer.inner obj = Outer.new inner();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>可类比静态域</li>
<li>静态内部类中可以定义静态或者非静态的成员。<br>从技术上讲，静态嵌套类不属于内部类。因为内部类与外部类共享一种特殊关系，更确切地说是对实例的共享关系。而静态嵌套类则没有上述关系。它只是位置在另一个类的内部，因此也被称为顶级嵌套类。<br>静态的含义是该内部类可以像其他静态成员一样，没有外部类对象时，也能够访问它。静态嵌套类仅能访问外部类的静态成员和方法。</li>
<li>在静态方法中定义的内部类也是StaticNested Class，这时候不能在类前面加static关键字，静态方法中的StaticNested Class与普通方法中的内部类的应用方式很相似，它除了可以直接访问外部类中的static的成员变量，还可以访问静态方法中的局部变量，但是，该局部变量前必须加final修饰符。</li>
</ul>
<ol>
<li><h5 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h5></li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">new ParentName()&#123;</div><div class="line">    //内部类的定义</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>使用情景</li>
</ul>
<ol>
<li>只用到类的一个实例</li>
<li>类在定义后马上用到</li>
<li>类非常小</li>
<li>不会对可读性影响太大</li>
</ol>
<ul>
<li>注意</li>
</ul>
<ol>
<li><p>不能有构造方法</p>
</li>
<li><p>不能定义任何静态成员、静态方法<br><br>理由：匿名内部类是晚于外部类加载的，但是匿名内部类和其对象几乎是同时加载的，但是还是早于对象加载，而静态内容是属于类的，当类加载的时候就开始加载，所以当匿名内部类中有静态内容，就会随着类加载，而这时和对象创建冲突。</p>
</li>
<li><p>不能是public protected private static</p>
</li>
<li><p>只能创建一个实例</p>
</li>
<li><p>跟在new后面，隐含实现一个接口或一个类</p>
</li>
</ol>
<h4 id="为何要使用内部类"><a href="#为何要使用内部类" class="headerlink" title="为何要使用内部类"></a>为何要使用内部类</h4><ul>
<li><p>典型的情况是，内部类继承自某个类或实现某个接口，内部类的代码操作创建其他外围类的对象。所以你可以认为内部类提供了某种进入其外围类的窗口。使用内部类最吸引人的原因是：</p>
</li>
<li><p>每个内部类都能独立地继承自一个（接口的）实现，所以无论外围类是否已经继承了某个（接口的）实现，对于内部类都没有影响。如果没有内部类提供的可以继承多个具体的或抽象的类的能力，一些设计与编程问题就很难解决。从这个角度看，内部类使得多重继承的解决方案变得完整。接口解决了部分问题，而内部类有效地实现了“多重继承”。</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;内部类&quot;&gt;&lt;a href=&quot;#内部类&quot; class=&quot;headerlink&quot; title=&quot;内部类&quot;&gt;&lt;/a&gt;内部类&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;h5 id=&quot;成员内部类&quot;&gt;&lt;a href=&quot;#成员内部类&quot; class=&quot;headerlink&quot; title=&quot;成员
    
    </summary>
    
      <category term="Java" scheme="http://www.junqson.xin/categories/Java/"/>
    
    
      <category term="JavaSE" scheme="http://www.junqson.xin/tags/JavaSE/"/>
    
  </entry>
  
  <entry>
    <title>JS继承的理解</title>
    <link href="http://www.junqson.xin/2017/11/25/js%E7%BB%A7%E6%89%BF%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>http://www.junqson.xin/2017/11/25/js继承的理解/</id>
    <published>2017-11-25T05:29:17.000Z</published>
    <updated>2018-07-25T08:13:30.572Z</updated>
    
    <content type="html"><![CDATA[<h4 id="出于对实用的考虑，只讨论最常用的组合式继承和最完美寄生组合式继承。"><a href="#出于对实用的考虑，只讨论最常用的组合式继承和最完美寄生组合式继承。" class="headerlink" title="出于对实用的考虑，只讨论最常用的组合式继承和最完美寄生组合式继承。"></a>出于对实用的考虑，只讨论最常用的组合式继承和最完美寄生组合式继承。</h4><h3 id="1、组合式继承"><a href="#1、组合式继承" class="headerlink" title="1、组合式继承"></a>1、组合式继承</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">function Super(val,id)&#123;</div><div class="line">    //只定义实例域</div><div class="line">    this.val = val;</div><div class="line">    this.id = id;</div><div class="line">    </div><div class="line">&#125;</div><div class="line">    </div><div class="line">//为父类添加方法</div><div class="line">Super.prototpye.getId = function()&#123;</div><div class="line">     return this.id;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">function Son(val,id,sex,name)&#123;</div><div class="line">    Super.call(this,val,id); //调用父类方法为子类添加实例域</div><div class="line">    this.sex = sex;</div><div class="line">    this.name = name;</div><div class="line">&#125;</div><div class="line">//没有指定construtor，再次调用了Super方法，产生了两套相同的父类实例域，这正是这个方法的弊端所在</div><div class="line">Son.prototype = new Super(); </div><div class="line">//为子类对添加方法</div><div class="line">Son.prototype.getSex = function()&#123;</div><div class="line">    return sex;</div><div class="line">&#125;;</div><div class="line">//实例化子类对象</div><div class="line">var son = new Son(1,0,&apos;n&apos;,&apos;sim&apos;);</div></pre></td></tr></table></figure>
<h3 id="2、寄生组合式继承"><a href="#2、寄生组合式继承" class="headerlink" title="2、寄生组合式继承"></a>2、寄生组合式继承</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">/*拷贝父类的对象，使子类拥有父类原型链上的属性和方法。此时得到一个F类的对象，该对象充当子类的prototype，而该对象的prototype</div><div class="line">指向父类的prototype，这样通过原型链继承了父类的方法和实例域，同时对子类的Prototype进行添加方法或实例域又不会影响到父类*/</div><div class="line">function copyPrototype(o)&#123;</div><div class="line">    function F()&#123;&#125;;</div><div class="line">    F.prototype = o;</div><div class="line">    var op = new F();</div><div class="line">    return op;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function Super(val,id)&#123;</div><div class="line">    //只定义实例域</div><div class="line">    this.val = val;</div><div class="line">    this.id = id;</div><div class="line">    </div><div class="line">&#125;</div><div class="line">    </div><div class="line">//为父类添加方法</div><div class="line">Super.prototpye.getId = function()&#123;</div><div class="line">     return this.id;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">function Son(val,id,sex,name)&#123;</div><div class="line">    Super.call(this,val,id); //调用父类方法为子类添加实例域</div><div class="line">    this.sex = sex;</div><div class="line">    this.name = name;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Son.prototype = copyPrototype(Super.prototpye);</div><div class="line">Son.prototype.constructor = Son; //指定constructor</div><div class="line">//为子类添加方法</div><div class="line">Son.prototype.getSex = function()&#123;</div><div class="line">    return this.sex;</div><div class="line">&#125;;</div><div class="line">//实例化子类</div><div class="line">Son son = new Son(1,0,&apos;n&apos;,&apos;sim&apos;);</div></pre></td></tr></table></figure>
<h4 id="关于其他继承方法"><a href="#关于其他继承方法" class="headerlink" title="关于其他继承方法"></a>关于其他继承方法</h4><h5 id="1-简单原型链"><a href="#1-简单原型链" class="headerlink" title="1. 简单原型链"></a>1. 简单原型链</h5><p>实现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Son.prototype = new Super();</div></pre></td></tr></table></figure></p>
<p>缺点</p>
<ol>
<li>修改父类的实例域时，所有的对象都被修改</li>
<li>无法向父类构造函数传参</li>
</ol>
<h5 id="2-借用构造函数"><a href="#2-借用构造函数" class="headerlink" title="2. 借用构造函数"></a>2. 借用构造函数</h5><p>实现<br>解决了简单原型链方法的两个弊端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Super.call(this,val);</div></pre></td></tr></table></figure></p>
<p>缺点</p>
<ol>
<li>无法实现函数复用，每一个对象都持有一个function</li>
</ol>
<h5 id="3-原型式"><a href="#3-原型式" class="headerlink" title="3.原型式"></a>3.原型式</h5><p>实现<br>不需要创建自定义类型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var s = new Super();</div><div class="line">var son = copyProtoype(s);</div><div class="line"></div><div class="line">//增强</div><div class="line">son.attr1 = value;</div><div class="line">.......</div></pre></td></tr></table></figure></p>
<p>缺点</p>
<ol>
<li>父类原型中实例域共享</li>
<li>无法代码复用，创建子类麻烦</li>
</ol>
<h5 id="4-寄生式"><a href="#4-寄生式" class="headerlink" title="4.寄生式"></a>4.寄生式</h5><p>实现<br>不需要创建自定义类型，是原型式的简单改进，穿上了函数马甲<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">function getSubObject(obj)&#123;</div><div class="line">    var son = copyProtoype(s);</div><div class="line">    //增强</div><div class="line">    son.attr1 = value;</div><div class="line">    ...</div><div class="line">    return son;</div><div class="line">&#125;</div><div class="line">var son = getSubObject(new Super());</div></pre></td></tr></table></figure></p>
<p>缺点<br>不能实现函数复用(没有原型)</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;出于对实用的考虑，只讨论最常用的组合式继承和最完美寄生组合式继承。&quot;&gt;&lt;a href=&quot;#出于对实用的考虑，只讨论最常用的组合式继承和最完美寄生组合式继承。&quot; class=&quot;headerlink&quot; title=&quot;出于对实用的考虑，只讨论最常用的组合式继承和最完美寄
    
    </summary>
    
      <category term="JavaScript" scheme="http://www.junqson.xin/categories/JavaScript/"/>
    
    
      <category term="面向对象" scheme="http://www.junqson.xin/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="继承" scheme="http://www.junqson.xin/tags/%E7%BB%A7%E6%89%BF/"/>
    
  </entry>
  
  <entry>
    <title>一种简单加密算法</title>
    <link href="http://www.junqson.xin/2017/10/31/%E4%B8%80%E7%A7%8D%E7%AE%80%E5%8D%95%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/"/>
    <id>http://www.junqson.xin/2017/10/31/一种简单加密算法/</id>
    <published>2017-10-31T02:29:17.000Z</published>
    <updated>2018-02-22T10:10:56.378Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、原理：计算机逻辑运算（xor-ASC2码表（字符串处理）"><a href="#一、原理：计算机逻辑运算（xor-ASC2码表（字符串处理）" class="headerlink" title="一、原理：计算机逻辑运算（xor)+ASC2码表（字符串处理）"></a>一、原理：计算机逻辑运算（xor)+ASC2码表（字符串处理）</h3><h3 id="二、代码-nbsp-nbsp-nbsp-Pasca语言"><a href="#二、代码-nbsp-nbsp-nbsp-Pasca语言" class="headerlink" title="二、代码&nbsp;&nbsp;&nbsp;(Pasca语言)"></a>二、代码&nbsp;&nbsp;&nbsp;(Pasca语言)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div></pre></td><td class="code"><pre><div class="line">type</div><div class="line"></div><div class="line">  re=record</div><div class="line"></div><div class="line">   mingv:string;</div><div class="line"></div><div class="line">   miv:array[1..100000] of integer;</div><div class="line"></div><div class="line">   smiv:array[1..100000] of string;</div><div class="line"></div><div class="line">   l:longint;</div><div class="line"></div><div class="line">   end;</div><div class="line"></div><div class="line">var</div><div class="line"></div><div class="line">  s:array[1..10] of re; </div><div class="line"></div><div class="line">  hs,js,caozuo,jmv,nc:longint;</div><div class="line"></div><div class="line">  sc:string;</div><div class="line"></div><div class="line">    </div><div class="line"></div><div class="line">procedure encrypt;</div><div class="line"></div><div class="line">  var k:longint;</div><div class="line"></div><div class="line">  begin</div><div class="line"></div><div class="line">     s[js].l:=length(s[js].mingv);</div><div class="line"></div><div class="line">     for k:=1 to s[js].l do </div><div class="line"></div><div class="line">      begin</div><div class="line"></div><div class="line">       s[js].miv[k]:=ord(s[js].mingv[k]);</div><div class="line"></div><div class="line">       if s[js].miv[k]&lt;100 then s[js].miv[k]:=s[js].miv[k]*4;</div><div class="line"></div><div class="line">       s[js].miv[k]:=s[js].miv[k] xor jmv;</div><div class="line"></div><div class="line">       write(s[js].miv[k],&apos; &apos;);</div><div class="line"></div><div class="line">      end;</div><div class="line"></div><div class="line">  end;</div><div class="line"></div><div class="line">procedure decode;</div><div class="line"></div><div class="line">  begin</div><div class="line"></div><div class="line">    while pos(&apos; &apos;,s[js].mingv) &lt;&gt;0 do </div><div class="line"></div><div class="line">     begin</div><div class="line"></div><div class="line">       sc:=copy(s[js].mingv,1,pos(&apos; &apos;,s[js].mingv)-1);</div><div class="line"></div><div class="line">       delete(s[js].mingv,1,pos(&apos; &apos;,s[js].mingv));</div><div class="line"></div><div class="line">       val(sc,nc);</div><div class="line"></div><div class="line">       nc:=nc xor jmv;</div><div class="line"></div><div class="line">       if nc&gt;122 then nc:=nc div 4;</div><div class="line"></div><div class="line">       write(chr(nc));</div><div class="line"></div><div class="line">     end;</div><div class="line">       val(s[js].mingv,nc);</div><div class="line"></div><div class="line">       nc:=nc xor jmv;</div><div class="line"></div><div class="line">       if nc&gt;122 then nc:=nc div 4;</div><div class="line"></div><div class="line">       write(chr(nc))；</div><div class="line"></div><div class="line">  end;</div><div class="line"></div><div class="line">begin</div><div class="line"></div><div class="line">   assign(input,&apos;in.txt&apos;);</div><div class="line"></div><div class="line">   assign(output,&apos;out.txt&apos;);</div><div class="line"></div><div class="line">   reset(input);</div><div class="line"></div><div class="line">   rewrite(output);</div><div class="line"></div><div class="line">   writeln(&apos;what you want to do?&apos;);</div><div class="line"></div><div class="line">   writeln(&apos;encrypt --1 or decode  --2?&apos;);</div><div class="line"></div><div class="line">   writeln(&apos;linenumber &amp; key&apos;);</div><div class="line"></div><div class="line">   readln(caozuo);</div><div class="line"></div><div class="line">   if caozuo=1 then begin</div><div class="line"></div><div class="line">     readln(hs,jmv);</div><div class="line"></div><div class="line">     for js:=1 to hs do readln(s[js].mingv);</div><div class="line"></div><div class="line">     writeln(&apos;text:&apos;);</div><div class="line"></div><div class="line">     for js:=1 to hs do begin encrypt; writeln; end;</div><div class="line"></div><div class="line">     writeln;</div><div class="line"></div><div class="line">     writeln(&apos;key:&apos;);</div><div class="line"></div><div class="line">     writeln(not jmv);</div><div class="line"></div><div class="line">   end</div><div class="line"></div><div class="line">  else if caozuo=2 then begin</div><div class="line"></div><div class="line">    readln(hs,jmv);</div><div class="line"></div><div class="line">    jmv:=not jmv;</div><div class="line"></div><div class="line">    for js:=1 to hs do readln(s[js].mingv);</div><div class="line"></div><div class="line">    writeln(&apos;text:&apos;);</div><div class="line"></div><div class="line">    for js:=1 to hs do begin decode;writeln;  end;</div><div class="line"></div><div class="line">   end;</div><div class="line"></div><div class="line">   close(input);</div><div class="line"></div><div class="line">   close(output);</div><div class="line"></div><div class="line">end.</div></pre></td></tr></table></figure>
<h3 id="三、输入-（文件in-txt）"><a href="#三、输入-（文件in-txt）" class="headerlink" title="三、输入 （文件in.txt）"></a>三、输入 （文件in.txt）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">加密（1）1</div><div class="line"></div><div class="line">    （2）行数 密钥  （整数）                                 </div><div class="line">    （3）明文</div><div class="line"></div><div class="line">解密（1）2</div><div class="line"></div><div class="line">     （2）行数 反密钥                                   </div><div class="line"></div><div class="line">     （3）明文</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">Example：</div><div class="line"></div><div class="line">  1</div><div class="line"></div><div class="line">  1 1314</div><div class="line"></div><div class="line">  Good morning,sir</div></pre></td></tr></table></figure>
<h3 id="四、输出（out-txt）"><a href="#四、输出（out-txt）" class="headerlink" title="四、输出（out.txt）"></a>四、输出（out.txt）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">  （1）密文——多组数字（空格隔开）</div><div class="line"></div><div class="line">  （2）反密钥</div><div class="line"></div><div class="line">Example</div><div class="line"></div><div class="line">what you want to do?</div><div class="line"></div><div class="line">encrypt --1 or decode  --2?</div><div class="line"></div><div class="line">linenumber &amp; key</div><div class="line"></div><div class="line">text:</div><div class="line"></div><div class="line">1349 1357 1357 1350 1442 1359 1357 1360 1356 1355 1356 1349 1426 1361 1355 1360 (一行）</div><div class="line"></div><div class="line">key:</div><div class="line"></div><div class="line">-1315</div></pre></td></tr></table></figure>
<h6 id="不保证数据一定准确（一定概率出错（要看密钥的情况））"><a href="#不保证数据一定准确（一定概率出错（要看密钥的情况））" class="headerlink" title="不保证数据一定准确（一定概率出错（要看密钥的情况））"></a>不保证数据一定准确（一定概率出错（要看密钥的情况））</h6><hr>
<h6 id="2015-8-11"><a href="#2015-8-11" class="headerlink" title="2015-8-11"></a>2015-8-11</h6>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、原理：计算机逻辑运算（xor-ASC2码表（字符串处理）&quot;&gt;&lt;a href=&quot;#一、原理：计算机逻辑运算（xor-ASC2码表（字符串处理）&quot; class=&quot;headerlink&quot; title=&quot;一、原理：计算机逻辑运算（xor)+ASC2码表（字符串处理）&quot;
    
    </summary>
    
      <category term="算法" scheme="http://www.junqson.xin/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="加密" scheme="http://www.junqson.xin/tags/%E5%8A%A0%E5%AF%86/"/>
    
      <category term="Pascal" scheme="http://www.junqson.xin/tags/Pascal/"/>
    
  </entry>
  
  <entry>
    <title>【集】何处轻吟浅唱</title>
    <link href="http://www.junqson.xin/2017/10/29/%E3%80%90%E9%9B%86%E3%80%91%E4%BD%95%E5%A4%84%E8%BD%BB%E5%90%9F%E6%B5%85%E5%94%B1/"/>
    <id>http://www.junqson.xin/2017/10/29/【集】何处轻吟浅唱/</id>
    <published>2017-10-29T07:36:49.000Z</published>
    <updated>2018-02-22T10:11:56.803Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>生死契阔，与子成说，执子之手，与子偕老。</p>
</li>
<li><p>雁字回时，月满西楼。花自飘零水自流。<br>一种相思，两处闲愁。<br>此情无计可消除，才下眉头，却上心头。</p>
</li>
<li><p>人生若只如初见，何事秋风悲画扇。<br>等闲变却故人心，却道故人心易变。</p>
</li>
<li><p>一生一世一双人，半梦半醒半浮生。</p>
</li>
<li><p>山有木兮木有枝，心悦君兮君不知。</p>
</li>
<li><p>初见无心，再见惊鸿。</p>
</li>
<li><p>平生不会相思，才会相思，便害相思。<br>身似浮云，心如飞絮，气若游丝。</p>
</li>
<li><pre>你说烟雨微茫，兰亭远望，后来轻揽婆娑，深遮霓裳；
你说春光烂漫，绿袖红香，后来内掩西楼，静立卿旁；
你说软风轻拂，醉卧思量，后来紧掩门窗，幔帐成殇；
你说情丝柔肠，如何相忘，我却眼波微转，兀自成霜！</pre>
</li>
<li><p>两姓联姻，一堂缔约，良缘永结，匹配同称。看此日桃花灼灼，宜室宜家，卜他年瓜瓞绵绵，尔昌尔炽。谨以白头之约，书向鸿笺，好将红叶之盟，载明鸳谱。此证。”</p>
</li>
<li><p>一壶酒，一匹马，一树桃花，姑娘，若我许你锦绣年华，可愿陪我浪迹天涯？</p>
</li>
<li><pre>待我长发及腰，将军归来可好？
此身君子意逍遥，怎料山河萧萧。
天光乍破遇，暮雪白头老。
寒剑默听奔雷，长枪独守空壕。
醉卧沙场君莫笑，一夜吹彻画角。
江南晚来客，红绳结发梢。

待卿长发及腰，我必凯旋回朝。
昔日纵马任逍遥，俱是少年英豪。
东都霞色好，西湖烟波渺。
执枪血战八方，誓守山河多娇。
应有得胜归来日，与卿共度良宵。
盼携手终老，愿与子同袍。</pre>
</li>
<li><pre>江南三月雨微茫，罗伞叠烟湿幽香。
夏日微熏正可人，却傍佳木趁阴凉。
霜风清和更初霁，轻蹙峨眉锁朱窗。
怜卿一片相思意，尤恐流年折鸳鸯。</pre>
</li>
<li><p>柔情似水，佳期如梦，忍顾鹊桥归路。<br>两情若是长久时，又岂在朝朝暮暮？</p>
</li>
<li><p>你在南方的艳阳里大雪纷飞，<br>我在北方的寒夜里四季如春。</p>
</li>
<li><p>他说你任何为人称道的美丽不及他第一次遇见你<br>时光苟延残喘无可奈何</p>
</li>
<li><p>他们在别有用心的生活里翩翩起舞<br>你在我后半生的城市里长生不老</p>
</li>
<li><p>你可知道你的名字解释了我的一生<br>碎了满天的往事如烟<br>与世无争 </p>
</li>
<li><p>我愿用我剩下的时光<br>再和你说那一句<br>愿意此时遇见你 不是未来 不是过去<br>因为过去我们早已失去 未来太远不着边际</p>
</li>
<li><p>一点朱砂，两方罗帕，三五鸿雁，乱了四季扬花。</p>
</li>
<li><p>如果你驯养我，那我的生命将会充满阳光，你的脚步声会变得跟别人不一样，其他人的脚步声会让我迅速躲到地底下，而你的脚步声则会像音乐一样，把我召唤出洞穴</p>
</li>
<li><p>宜言饮酒，与子偕老；琴瑟在御，莫不静好。</p>
</li>
<li><p>入我相思门，知我相思苦，长相思兮长相忆，短相思兮无穷极。</p>
</li>
<li><p>既不回头，何必不忘。既然无缘，何须誓言。今日种种，似水无痕。明夕何夕，君已陌路</p>
</li>
<li><p>若有来生，我愿为树，一叶之灵，窥尽全秋</p>
</li>
<li><p>曾虑多情损梵行，入山又恐别倾城，世间安得双全法，不负如来不负卿</p>
</li>
<li><p>梨花院落溶溶月，柳絮池塘淡淡风<br>三生桃花绘成扇，细雨落花人独看</p>
</li>
<li><p>烟波画桥，风帘翠幕，三秋桂子，十里荷花。王孙倚马，公子登楼，游人佳客，钓叟莲娃。</p>
</li>
<li><p>染火枫林，琼壶歌月，长歌倚楼。岁岁年年，花前月下，一樽芳酒。水落红莲，唯闻玉磬，但此情依旧</p>
</li>
<li><p>与君醉笑三千场，不诉离殇</p>
</li>
<li><p>心有猛虎，细嗅蔷薇</p>
</li>
<li><p>系门前柳影兰舟，烟满吟蓑，风漾闲钩。石上云生，山间树老，桥外霞收。<br>玩青史低头袖手，问红尘缄口回头。醉月悠悠，漱石休休，水可陶情，花可融愁。</p>
</li>
<li><pre>一月你还没有出现
二月你睡在隔壁
三月下起了大雨
四月里遍地蔷薇
五月我们对面坐着 犹如梦中 就这样六月来了
六月里青草盛开 处处芬芳
七月，悲喜交加 麦浪翻滚连同草地 直到天涯
八月就是八月
八月我守口如瓶 八月里我是瓶中的水 你是青天的云
九月和十月 是两只眼睛 装满了大海
你在海上 我在海下
十一月尚未到来
透过它的窗口 我看见了十二月
十二月大雪弥漫，淹没了一整年的思念，悲伤走样</pre>
</li>
<li><p>我欲与君相知，<br>长命无绝衰。<br>山无陵，<br>江水为竭，<br>冬雷震震，<br>夏雨雪 ，<br>天地合 ，<br>乃敢与君绝。</p>
</li>
<li><p>水流深，沧笙踏歌；三生阴晴圆缺，一朝悲欢离合。</p>
</li>
<li><p>此情应是长相守，你若无心我便休，灵犀从此锁高楼。</p>
</li>
<li><p>春日游，杏花吹满头。陌上谁家少年，足风流。<br>妾拟将身嫁与，一生休。纵被无情弃，不能羞。</p>
</li>
<li><p>门虽设，常掩秋来春去过。花尽落，曾是风吹雨打过。人亦错，时光亦过。</p>
</li>
<li><p>人人尽说江南好，游人只合江南老。<br>春水碧于天，画船听雨眠。<br>垆边人似月，皓腕凝霜雪。<br>未老莫还乡，还乡须断肠。</p>
</li>
<li><p>我是人间惆怅客，知君何事泪纵横，断肠声里忆平生。</p>
</li>
<li><p>野百合散开在黄昏的山巅<br>有谁在月光下变成桂树<br>可以逃过夜夜的思念</p>
</li>
<li><p>我曾踏月而去，只因你在山中</p>
</li>
<li><p>还记得你说世界美好事情真的特别多 只是很容易擦肩而过</p>
</li>
<li><p>我可以锁住笔 为什么<br>却锁不住爱和忧伤<br>在长长的一生里 为什么<br>欢乐总是乍现就凋落<br>走的最急的都是最美的时光 </p>
</li>
<li><p>后来离开你 我只学会了两种表情<br>失声痛哭和放声大笑<br>过滤掉其间所有起起落落明明灭灭的琐碎情绪 在时光岁月中缄默不言<br>疲惫的神情 不停流汗的眼睛 和伤亡败阵的心</p>
</li>
<li><p>雾起时 我就在你的怀里 林间充满了湿润的芳香 充满了那不断重现的少年时光</p>
</li>
<li><p>月光衣我以华裳<br>林间有新绿似我青春模样<br>青春透明如醇酒<br>可饮 可尽 可别离<br>但终我俩多少物换星移的韶华<br>却总不能将它忘记  </p>
</li>
<li><p>我已无诗 世间也再无飞花 无细雨</p>
</li>
<li><p>等待是一生中最初的苍老<br>是令人日渐消瘦的心事<br>是举著前莫名的伤悲<br>是记忆里一场不散的筵席<br>是不能饮不可饮，也要拼却的一醉</p>
</li>
<li><p>浮华一生，淡忘一季。空有回忆，打乱缠绵。笑容不见，落寞万千。弦，思华年。</p>
</li>
<li><p>一杯香茗，一卷书，偷得半日闲散；一抹斜阳，一壶酒，愿求半世逍遥。</p>
</li>
<li><p>贺卿得高迁，卿当日胜贵，吾独向黄泉。</p>
</li>
<li><p>年年岁岁花相似，岁岁年年人不同。</p>
</li>
<li><p>身无彩凤双飞翼，心有灵犀一点通。</p>
</li>
<li><p>沧海月明珠有泪，蓝田日暖玉生烟。此情可待成追忆，只是当时已惘然。——《锦瑟》</p>
</li>
<li><p>衣带渐宽终不悔，为伊消得人憔悴。——柳永</p>
</li>
<li><p>我单手一挥,负手而立,错,是朕的江山如画</p>
</li>
<li><p>他年我若为青帝，报与桃花一处开</p>
</li>
<li><p>愿你有梦为马，随处可栖</p>
</li>
<li><p>明月无眠思杨柳，清风有梦寄倩人</p>
</li>
<li><p>时光和破碎的梦想，被埋葬在一起不停的发酵，无法停止</p>
</li>
<li><p>孤枕偏生蝴蝶梦,吟鞋怕上凤凰楼</p>
</li>
<li><p>琵琶弦上说相思，当时明月在，曾照彩云归</p>
</li>
<li><p>好在时光仁慈，我们还能拥有回忆. </p>
</li>
<li><p>最难受的思念，不是对方不知道你的思念，而是他知道却无所谓。有些人，无论你怎么对他好，他也不会留意，因为他的生命里，你显得是多么的微不足道。</p>
</li>
<li><p>哀伤的不会忘却那只是一些片段<br>忘却的无法消失他们躲在树后面</p>
</li>
<li><p>你给我听好 想哭就要笑<br>其实你知道烦恼会解决烦恼<br>新的刚来到 旧的就忘掉<br>渺小的控诉只是证明生活并不无聊</p>
</li>
<li><p>阳光温热，岁月静好，你还不来，我怎敢老去。——张爱玲</p>
</li>
<li><p>渐渐的开始害怕黑夜，最近常常失眠，当你闭上眼睛的时候，最痛苦的事情就是，竟然再也找不到醒来的理由。——郭敖 《给未知恋人的情书》</p>
</li>
<li><p>无可奈何花落去 似曾相识燕归来</p>
</li>
<li><p>望美人兮未来，临风恍兮诰歌</p>
</li>
<li><p>流浪的人不会为任何人停留，带不走的便是留不住的</p>
</li>
<li><p>“此生不负”<br>“此生不负？何为不负？彼年豆蔻，谁许谁地老天荒？”</p>
</li>
<li><p>你的微笑是我终此残生无法再见的光</p>
</li>
<li><p>有的爱情，只能启于唇齿，止于流年<br>有的爱情，只能深藏心底，示以友谊</p>
</li>
<li><pre>她只想要一套小房子，
能做你的小妻子，
一起提着菜篮子，
穿过门前的小巷子，
饭后用不着你洗盘子，
可你得负责抹桌子，
再要个胖胖的小孩子，
可爱得就象小丸子，
等你长出了白胡子，
坐在家中老椅子，
可会记得这好日子，
和她美丽的花裙子。</pre>
</li>
<li><p>若非青春苦短 怎知来日方长<br>若非失意流浪 怎知世态炎凉</p>
</li>
<li><p>听过很多道理，却依然过不好这一生。</p>
</li>
<li><p>去年今日此门中，人面桃花相映红。<br>人面不知何处去，桃花依旧笑春风。</p>
</li>
<li><p>满树桃花嫩 ,漂花遮人目.  欲待手拂去, 蝴蝶绕人足. </p>
</li>
<li><p>一首相思入曲魂 ，一人独奏一伤神，情深堪苦，情淡似浮云 。<br>转瞬东风他处遁，旧时桃色了无痕，今朝月缺 ，谁在赋词文？</p>
</li>
<li><ol>
<li>设使国家无有孤，不知当几人称帝，几人称王！</li>
<li>龙能大能小，能升能隐；大则兴云吐雾，小 则隐介藏形；升则飞腾于宇宙之间，隐则潜伏于波涛之内。方今春深，龙乘时变化， 犹人得志而纵横四海。龙之为物，可比世之英雄。</li>
<li>夫英雄者，胸怀大志，腹有良谋，有包藏宇宙之机，吞吐天地之志者也！</li>
<li>或成侠成魔，或为善为恶，小说不止小境界。采漠北狼烟，惊塞上飞鹰：萧峰魂断，狄云梦醒，胡斐心迷，杨过情痴，英雄魂梦随心情种种付流水，教多少儿女泪落青衫。诡如东方，奸如慕容，伪如不群，狂如我行，千秋霸业尽付一枕黄粱。琴断箫折，逝魔教长老，正派耆宿，与谁同奏笑傲江湖曲？<br>　　 时释禅释儒，时说道说义，大匠自有大胸怀。忆江南旧事，赴中原逐鹿：嵩山风疾，峨嵋月冷，昆仑雪深，点苍花凋，武林风月伴雪花片片舞连天，惹几处院落叹生华发。妖若黄蓉，美若语嫣，巧若双儿，艳若康敏，三春佳丽悉入万丈紫陌。心灰意懒，舍倚天长剑，屠龙宝刀，惟我独参怒目金刚经。</li>
</ol>
</li>
<li><p>人生是场繁华与荒芜并存的旅行，冷暖自知，苦乐在心。</p>
</li>
<li><p>每个人的心里都住着两个自己，一个想要过平淡安稳世俗眼光下合理的生活，一个不安分 蠢蠢欲动 充满梦幻般的小野心，而大多时候的战争，都是自己与自己为敌。</p>
</li>
<li><p>时光和破碎的梦想，被埋葬在一起不停的发酵，无法停止。</p>
</li>
<li><p>用我一生换你十年天真无邪。——南派三叔 《盗墓笔记》</p>
</li>
<li><p>You know my loneliness is only kept for you, my sweet songs are only sung for you.<br>你可知我百年的孤寂只为你一人守侯，千夜的恋歌只为你一人而唱。</p>
</li>
<li><p>岁月长，衣衫薄</p>
</li>
<li><p>你懂得越多，你就越像这个世界的孤儿</p>
</li>
<li><p>我是站在时光里想念你的树 枝桠因心事太多而静默 你欣喜也好 沉默也好 我已丢掉光阴 找到平静</p>
</li>
<li><p>春到芳菲春将尽，情到深处情转薄</p>
</li>
<li><p>明月无眠思杨柳，清风有梦寄倩人</p>
</li>
<li><p>我的心是旷野的鸟，在你的眼睛里找到了天空</p>
</li>
<li><p>对在乎你牵挂你为你哭的人好一点，别哪天一梦醒来发现在数星星的时候把月亮弄丢了。</p>
</li>
<li><pre>等待是一生中最初的苍老 
是令人日渐消瘦的心事 
是举著前莫名的伤悲 
是记忆里一场不散的筵席 
是不能饮不可饮，也要拼却的一醉</pre>
</li>
<li><p>如果你是条船，漂泊就是你的命运，可别靠岸。</p>
</li>
<li><p>自在飞花轻似梦，无边丝雨细如愁</p>
</li>
<li><p>百般想 千般念 万般无奈</p>
</li>
<li><p>非笑人间繁事端，何来此多贪嗔怨？想念故国凌三界，处处清净无尘染。转腰回眸望来路，是非成败随风散。生死由我不由命，乐悲在己不在天。曲中自有乾坤在。园内风景待探看。</p>
</li>
<li><p>缘起 在人群中 我看见你<br>缘灭 我看见你 在人群中</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;生死契阔，与子成说，执子之手，与子偕老。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;雁字回时，月满西楼。花自飘零水自流。&lt;br&gt;一种相思，两处闲愁。&lt;br&gt;此情无计可消除，才下眉头，却上心头。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;人生若只如初见，何事秋风悲画扇。&lt;b
    
    </summary>
    
      <category term="文艺" scheme="http://www.junqson.xin/categories/%E6%96%87%E8%89%BA/"/>
    
    
      <category term="诗词" scheme="http://www.junqson.xin/tags/%E8%AF%97%E8%AF%8D/"/>
    
      <category term="短句" scheme="http://www.junqson.xin/tags/%E7%9F%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>【贪心算法】田忌赛马</title>
    <link href="http://www.junqson.xin/2017/10/28/%E3%80%90%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E3%80%91%E7%94%B0%E5%BF%8C%E8%B5%9B%E9%A9%AC/"/>
    <id>http://www.junqson.xin/2017/10/28/【贪心算法】田忌赛马/</id>
    <published>2017-10-28T05:28:14.000Z</published>
    <updated>2018-02-22T10:09:36.748Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、故事背景"><a href="#一、故事背景" class="headerlink" title="一、故事背景"></a>一、故事背景</h3><p>  田忌赛马出自《史记》卷六十五：《孙子吴起列传第五》，是中国历史上有名的揭示如何善用自己的长处去对付对手的短处，从而在竞技中获胜的事例。</p>
<p>  齐使者如梁，孙膑以刑徒阴见，说齐使。齐使以为奇，窃载与之齐。齐将田忌善而客待之。忌数与齐诸公子驰逐重射。孙子见其马足不甚相远，马有上、中、下辈。于是孙子谓田忌曰：“君弟重射，臣能令君胜。”田忌信然之，与王及诸公子逐射千金。及临质，孙子曰：“今以君之下驷与彼上驷，取君上驷与彼中驷，取君中驷与彼下驷。”既驰三辈毕，而田忌一不胜而再胜，卒得王千金。于是忌进孙子于威王。威王问兵法，遂以为师。</p>
<p>  译文：齐国使者到大梁来，孙膑以刑徒的身份秘密拜见，劝说齐国使者。齐国使者觉得此人是个奇人，就偷偷地把他载回齐国。齐国将军田忌非常赏识他，并且待如上宾。田忌经常与齐国众公子赛马，设重金赌注。孙膑发现他们的马脚力都差不多，马分为上、中、下三等，于是对田忌说：“您只管下大赌注，我能让您取胜。”田忌相信并答应了他，与齐王和各位公子用千金来赌注。比赛即将开始，孙膑说：“现在用您的下等马对付他们的上等马，用您的上等马对付他们的中等马，用您的中等马对付他们的下等马。”已经比了三场比赛，田忌一场败而两场胜，最终赢得齐王的千金赌注。于是田忌把孙膑推荐给齐威王。齐威王向他请教了兵法，于是把他当成老师。</p>
<h3 id="二、题目HUD1052-Tian-Ji-–-The-Horse-Racing"><a href="#二、题目HUD1052-Tian-Ji-–-The-Horse-Racing" class="headerlink" title="二、题目HUD1052 Tian Ji – The Horse Racing"></a>二、题目HUD1052 Tian Ji – The Horse Racing</h3><p><img src="/MyBlog/img/tianji.png" alt="田忌赛马"></p>
<h3 id="三、样例输入输出"><a href="#三、样例输入输出" class="headerlink" title="三、样例输入输出"></a>三、样例输入输出</h3><ol>
<li>输入<br>3<br><br>92 83 71<br><br>95 87 74<br><br>2<br><br>20 20 <br><br>20 20 <br><br>2<br><br>20 19<br><br>22 18 <br><br>0<br></li>
<li>输出<br>200<br><br>0 <br><br>0<br><h3 id="四、算法思想-贪心（几率最大化-最大收益）"><a href="#四、算法思想-贪心（几率最大化-最大收益）" class="headerlink" title="四、算法思想 贪心（几率最大化 最大收益）"></a>四、算法思想 贪心（几率最大化 最大收益）</h3>首先将两者的马按速度递增排序，然后按照一至五条件依次进行判断，其中包括（田【最快】=齐【最快】 and 田【最慢】=齐【最慢】）的情况，按照条件5执行。<ol>
<li>田忌最慢的马比齐王最慢的马快，两者进行比赛，获胜。</li>
<li>田忌最慢的马比齐王最慢的马慢，用田忌最慢的马和齐王最快的马比赛，输掉</li>
<li>田忌最快的马比齐王最快的马快，两者进行比赛，获胜。</li>
<li>田忌最快的马比齐王最快的马慢，用田忌最慢的马和齐王最快的马比赛，输掉。</li>
<li>田忌最慢的马比齐王最快的马慢，用田忌最慢的马和齐王最快的马比赛，输掉。</li>
</ol>
</li>
</ol>
<h3 id="五、代码"><a href="#五、代码" class="headerlink" title="五、代码"></a>五、代码</h3><h4 id="1-pascal"><a href="#1-pascal" class="headerlink" title="1. pascal"></a>1. pascal</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div></pre></td><td class="code"><pre><div class="line">var n,st,ft,sq,fq,ans,i:longint;</div><div class="line">    t,q:array[1..2000] of longint;</div><div class="line">procedure inpu;</div><div class="line">begin</div><div class="line">  for i:=1 to n do</div><div class="line">    read(t[i]);</div><div class="line">  for i:=1 to n do</div><div class="line">    read(q[i]);</div><div class="line">end;</div><div class="line">procedure sortt(l,r: longint);</div><div class="line">var i,j,x,y: longint;</div><div class="line">begin</div><div class="line">  i:=l;j:=r;x:=t[(l+r) div 2];</div><div class="line">  repeat</div><div class="line">    while t[i]&lt;x do</div><div class="line">      inc(i);</div><div class="line">    while x&lt;t[j] do</div><div class="line">      dec(j);</div><div class="line">    if not(i&gt;j) then begin</div><div class="line">      y:=t[i];</div><div class="line">      t[i]:=t[j];</div><div class="line">      t[j]:=y;</div><div class="line">      inc(i);</div><div class="line">      j:=j-1;</div><div class="line">    end;</div><div class="line">    until i&gt;j;</div><div class="line">  if l&lt;j then</div><div class="line">    sortt(l,j);</div><div class="line">  if i&lt;r then</div><div class="line">    sortt(i,r);</div><div class="line">end;</div><div class="line">procedure sortq(l,r: longint);</div><div class="line">var i,j,x,y: longint;</div><div class="line">begin</div><div class="line">  i:=l;j:=r;x:=q[(l+r) div 2];</div><div class="line">  repeat</div><div class="line">    while q[i]&lt;x do</div><div class="line">      inc(i);</div><div class="line">    while x&lt;q[j] do</div><div class="line">      dec(j);</div><div class="line">    if not(i&gt;j) then begin</div><div class="line">      y:=q[i];</div><div class="line">      q[i]:=q[j];</div><div class="line">      q[j]:=y;</div><div class="line">      inc(i);</div><div class="line">      j:=j-1;</div><div class="line">    end;</div><div class="line">    until i&gt;j;</div><div class="line">  if l&lt;j then</div><div class="line">    sortq(l,j);</div><div class="line">  if i&lt;r then</div><div class="line">    sortq(i,r);</div><div class="line">end;</div><div class="line">procedure process;</div><div class="line">begin</div><div class="line">  sortt(1,n);</div><div class="line">  sortq(1,n);</div><div class="line">  st:=1;</div><div class="line">  sq:=1;</div><div class="line">  ft:=n;</div><div class="line">  fq:=n;</div><div class="line">end;</div><div class="line">procedure oupu;</div><div class="line">begin</div><div class="line">  writeln(ans);</div><div class="line">end;</div><div class="line">procedure main;</div><div class="line">begin</div><div class="line">  for i:=1 to n do begin</div><div class="line">    if (t[st]&gt;q[sq]) then begin</div><div class="line">      inc(st);</div><div class="line">      inc(sq);</div><div class="line">      inc(ans,200);</div><div class="line">      continue;</div><div class="line">    end;</div><div class="line">    if (t[st]&lt;q[sq]) then begin</div><div class="line">      inc(st);</div><div class="line">      dec(fq);</div><div class="line">      dec(ans,200);</div><div class="line">      continue;</div><div class="line">    end;</div><div class="line">    if (t[ft]&gt;q[fq]) then begin</div><div class="line">      dec(ft);</div><div class="line">      dec(fq);</div><div class="line">      inc(ans,200);</div><div class="line">     continue;</div><div class="line">    end;</div><div class="line">    if (t[ft]&lt;q[fq]) then begin</div><div class="line">      inc(st);</div><div class="line">      dec(fq);</div><div class="line">      dec(ans,200);</div><div class="line">      continue;</div><div class="line">    end;</div><div class="line">    if (t[st]&lt;q[fq]) then dec(ans,200);</div><div class="line">    inc(st);</div><div class="line">    dec(fq); </div><div class="line">  end;</div><div class="line">end;</div><div class="line">begin</div><div class="line"> readln(n);</div><div class="line"> while n&lt;&gt;0 do begin</div><div class="line">  ans:=0;</div><div class="line">  inpu;</div><div class="line">  process;</div><div class="line">  main;</div><div class="line">  oupu;</div><div class="line">  readln(n);</div><div class="line"> end;</div><div class="line">end.</div></pre></td></tr></table></figure>
<h4 id="2-C语言"><a href="#2-C语言" class="headerlink" title="2. C语言"></a>2. C语言</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">using namespace std;</div><div class="line">int t[2001],q[2001];</div><div class="line">int st,sq,ft,fq,ans,n;</div><div class="line">int inpu()</div><div class="line">  &#123;</div><div class="line">  	for (int i=1;i&lt;=n;++i)</div><div class="line">  	  scanf(&quot;%d&quot;,&amp;t[i]);</div><div class="line">  	for (int i=1;i&lt;=n;++i)</div><div class="line">  	  scanf(&quot;%d&quot;,&amp;q[i]);</div><div class="line">  &#125;</div><div class="line">int sortt(int l,int r)</div><div class="line">  &#123;  </div><div class="line">  	int i=l; int j=r; int y; </div><div class="line">  	int x=t[(l+r)/2];</div><div class="line">  	do</div><div class="line">  	  &#123;</div><div class="line">  	  	 while (t[i]&lt;x) ++i;</div><div class="line">  	  	 while (x&lt;t[j]) --j;</div><div class="line">  	  	 if (i&lt;=j) </div><div class="line">  	  	   &#123; </div><div class="line">  	  	      y=t[i];</div><div class="line">  	  	      t[i]=t[j];</div><div class="line">  	  	      t[j]=y;</div><div class="line">  	  	      ++i; --j;</div><div class="line">		   &#125;</div><div class="line">	  &#125;</div><div class="line">	while (i&lt;=j);</div><div class="line">	if (l&lt;j) sortt(l,j);</div><div class="line">	if (i&lt;r) sortt(i,r);	   </div><div class="line">  &#125;</div><div class="line">int sortq(int l,int r)</div><div class="line">  &#123;  </div><div class="line">  	int i=l; int j=r; int y; </div><div class="line">  	int x=q[(l+r)/2];</div><div class="line">  	do</div><div class="line">  	  &#123;</div><div class="line">  	  	 while (q[i]&lt;x) ++i;</div><div class="line">  	  	 while (x&lt;q[j]) --j;</div><div class="line">  	  	 if (i&lt;=j) </div><div class="line">  	  	   &#123; </div><div class="line">  	  	      y=q[i];</div><div class="line">  	  	      q[i]=q[j];</div><div class="line">  	  	      q[j]=y;</div><div class="line">  	  	      ++i; --j;</div><div class="line">		   &#125;</div><div class="line">	  &#125;</div><div class="line">	while (i&lt;=j);</div><div class="line">	if (l&lt;j) sortq(l,j);</div><div class="line">	if (i&lt;r) sortq(i,r);	   </div><div class="line">  &#125;</div><div class="line">int process()</div><div class="line">  &#123;</div><div class="line">  	sortt(1,n); sortq(1,n);</div><div class="line">  	st=sq=1; ft=fq=n;</div><div class="line">  &#125;  </div><div class="line">int oupu()</div><div class="line">  &#123;</div><div class="line">  	cout&lt;&lt;ans&lt;&lt;endl;	</div><div class="line">  &#125;</div><div class="line">int maina()</div><div class="line">  &#123;</div><div class="line">  	for (int i=1;i&lt;=n;++i)</div><div class="line">  	  &#123;</div><div class="line">  	  	if (t[st]&gt;q[sq])  &#123;++st; ++sq; ans+=200; continue;&#125;</div><div class="line">  	  	if (t[st]&lt;q[sq])  &#123;++st; --fq; ans-=200; continue;&#125;</div><div class="line">	        if (t[ft]&gt;q[fq])  &#123;--ft; --fq; ans+=200; continue;&#125;</div><div class="line">		if (t[ft]&lt;q[fq])  &#123;++st; --fq; ans-=200; continue;&#125;</div><div class="line">		if (t[st]&lt;q[fq])  ans-=200; ++st; --fq;</div><div class="line">	  &#125;</div><div class="line">  &#125;</div><div class="line">int main()</div><div class="line">  &#123;</div><div class="line">  	cin&gt;&gt;n;</div><div class="line">  	while (n!=0) </div><div class="line">  	  &#123;</div><div class="line">  	  	ans=0;</div><div class="line">  	  	inpu();</div><div class="line">  	  	process();</div><div class="line">  	  	maina();</div><div class="line">  	  	oupu();</div><div class="line">  	  	cin&gt;&gt;n;</div><div class="line">		&#125;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、故事背景&quot;&gt;&lt;a href=&quot;#一、故事背景&quot; class=&quot;headerlink&quot; title=&quot;一、故事背景&quot;&gt;&lt;/a&gt;一、故事背景&lt;/h3&gt;&lt;p&gt;  田忌赛马出自《史记》卷六十五：《孙子吴起列传第五》，是中国历史上有名的揭示如何善用自己的长处去对付对手的
    
    </summary>
    
      <category term="算法" scheme="http://www.junqson.xin/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="题解" scheme="http://www.junqson.xin/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="贪心" scheme="http://www.junqson.xin/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】斜杠(forward salash)与反斜杠(back salash)在路径应用中的区别</title>
    <link href="http://www.junqson.xin/2017/10/27/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91%E6%96%9C%E6%9D%A0-forward-salash-%E4%B8%8E%E5%8F%8D%E6%96%9C%E6%9D%A0-back-salash-%E5%9C%A8%E8%B7%AF%E5%BE%84%E5%BA%94%E7%94%A8%E4%B8%AD%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://www.junqson.xin/2017/10/27/【笔记】斜杠-forward-salash-与反斜杠-back-salash-在路径应用中的区别/</id>
    <published>2017-10-27T02:46:18.195Z</published>
    <updated>2018-02-22T10:07:13.444Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【笔记】斜杠-forward-salash-与反斜杠-back-salash-在路径应用中的区别"><a href="#【笔记】斜杠-forward-salash-与反斜杠-back-salash-在路径应用中的区别" class="headerlink" title="【笔记】斜杠(forward salash)与反斜杠(back salash)在路径应用中的区别"></a>【笔记】斜杠(forward salash)与反斜杠(back salash)在路径应用中的区别</h1><h3 id="一、各系统下的文件路径"><a href="#一、各系统下的文件路径" class="headerlink" title="一、各系统下的文件路径"></a><p color="red">一、各系统下的文件路径</p></h3><ol>
<li><p>unix系统中使用斜杠（/）作为路径分隔符。</p>
</li>
<li><p>Windows早期使用斜杠（/）<br>作为DOS命令提示符的参数标志。  为了防止混淆，采用反斜杠（\） 作为路径分隔符。<br>所以目前windows系统上的文件浏览器都是用 反斜杠（\） 作为路径分隔符。随着发展，DOS系统已经被淘汰了，命令提示符也用的很少，斜杆和反斜杠在大多数情况下可以互换，没有影响。Windows文件资源管理器地址栏认为斜杠和反斜杠是等效的。</p>
<h3 id="二、C语言中的文件路径字符串"><a href="#二、C语言中的文件路径字符串" class="headerlink" title="二、C语言中的文件路径字符串"></a><p color="red">二、C语言中的文件路径字符串</p></h3></li>
</ol>
<p>在Windows下的C（C++）语言中，由于Windows路径使用反斜杠\，但“\”同时是转义序列的引导，所以要写成“\”，比如文件路径字符串”C:\Users\Administrator\Destop\filename.file”。而在Unix，Linux和其他类Unix系统中，使用斜杠（/)。</p>
<h3 id="三、网络领域的的应用"><a href="#三、网络领域的的应用" class="headerlink" title="三、网络领域的的应用"></a><p color="red">三、网络领域的的应用</p></h3><p>1.由于早期web应用受Unix的影响。浏览器地址栏的网址，URL统一资源定位符使用斜杠（/）。<br>2.在HTML中涉及网络文件地址的要使用斜杠（/），比如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;p style=&quot;background-image:url(root/img/pic.jpg);&quot;&gt; &lt;/p&gt;，</div></pre></td></tr></table></figure></p>
<p>段落的背景图片样式属性的路径必须使用斜杠，反斜杠无效。<br>涉及到本地文件（windows）路径，斜杠反斜杠均可，比如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;C:/Users\Administrator/Desktop\1.png&quot; /&gt;</div></pre></td></tr></table></figure></p>
<hr>
<h6 id="2017-2-11-23-37第一次修改"><a href="#2017-2-11-23-37第一次修改" class="headerlink" title="2017.2.11 23:37第一次修改"></a>2017.2.11 23:37第一次修改</h6>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;【笔记】斜杠-forward-salash-与反斜杠-back-salash-在路径应用中的区别&quot;&gt;&lt;a href=&quot;#【笔记】斜杠-forward-salash-与反斜杠-back-salash-在路径应用中的区别&quot; class=&quot;headerlink&quot; tit
    
    </summary>
    
      <category term="辨析" scheme="http://www.junqson.xin/categories/%E8%BE%A8%E6%9E%90/"/>
    
    
      <category term="辨析" scheme="http://www.junqson.xin/tags/%E8%BE%A8%E6%9E%90/"/>
    
      <category term="路径" scheme="http://www.junqson.xin/tags/%E8%B7%AF%E5%BE%84/"/>
    
  </entry>
  
  <entry>
    <title>C++指针辨析</title>
    <link href="http://www.junqson.xin/2017/10/26/C-%E6%8C%87%E9%92%88%E8%BE%A8%E6%9E%90/"/>
    <id>http://www.junqson.xin/2017/10/26/C-指针辨析/</id>
    <published>2017-10-26T15:49:40.000Z</published>
    <updated>2018-02-22T10:10:11.770Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<h1 id="C-指针辨析"><a href="#C-指针辨析" class="headerlink" title="C++指针辨析"></a>C++指针辨析</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">#include &lt;iostream&gt;</div><div class="line">using namespace std;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">   </div><div class="line"></div><div class="line">    int a1[2];</div><div class="line">    int a2[2];</div><div class="line">    int a3[2];</div><div class="line">    </div><div class="line">    int *p;</div><div class="line">    p=&amp;a1[0];      //a[1]与*(p+1)等价。</div><div class="line">    </div><div class="line">    //pp1是一个指向int [2]的指针，即pp1的类型和&amp;a1是一样的。 a指向的内存长度固定。</div><div class="line">    int pp1[2][2]=&#123;&#123;1,2&#125;,&#123;1,2&#125;&#125;;</div><div class="line">     //pp2是一个指向int *的指针，即pp2的类型和&amp;pp1是一样的。pp指向的内存长度不固定。                </div><div class="line">    int *pp2[3]=&#123;a1,a2,a3&#125;;</div><div class="line">     //pp3是一个指向int [2]的指针，即pp2的类型和&amp;a1是一样的；</div><div class="line">    int (*pp3)[2]=&amp;a1;</div><div class="line">     //pp4是一个指向int *的指针，即pp4的类型和&amp;pp1是一样的；       </div><div class="line">    int **pp4;</div><div class="line">              </div><div class="line">     //可以，类型匹配。         </div><div class="line">    pp1=pp3;</div><div class="line">    pp2=pp4;</div><div class="line">    </div><div class="line">    //不可以。编译错误，无法从int (*)[2]转换为int **！               </div><div class="line">    pp1=pp4;</div><div class="line">    pp2=pp3;</div><div class="line"></div><div class="line">    int (*ps)[2]=&amp;a3;</div><div class="line">    a3[1]=10; </div><div class="line">    cout&lt;&lt;ps[0][1];</div><div class="line">    cout&lt;&lt;*(*ps+1);</div><div class="line">    //*(*ps+1)=ps[0][1]=*(*(ps+0)+1)=a3[1];</div><div class="line">   </div><div class="line"></div><div class="line"></div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<h6 id="第一次修改：2016-12-31-0-04"><a href="#第一次修改：2016-12-31-0-04" class="headerlink" title="第一次修改：2016-12-31 0:04"></a>第一次修改：2016-12-31 0:04</h6><h6 id="第二次修改：2017-1-4-22-07"><a href="#第二次修改：2017-1-4-22-07" class="headerlink" title="第二次修改：2017/1/4 22:07"></a>第二次修改：2017/1/4 22:07</h6>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;C-指针辨析&quot;&gt;&lt;a href=&quot;#C-指针辨析&quot; class=&quot;headerlink&quot; title=&quot;C++指针辨析&quot;&gt;&lt;/a&gt;C++指针辨析&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl
    
    </summary>
    
      <category term="辨析" scheme="http://www.junqson.xin/categories/%E8%BE%A8%E6%9E%90/"/>
    
    
      <category term="C++" scheme="http://www.junqson.xin/tags/C/"/>
    
      <category term="指针" scheme="http://www.junqson.xin/tags/%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】equals方法重写、相等性测试和继承</title>
    <link href="http://www.junqson.xin/2017/10/26/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91equals%E6%96%B9%E6%B3%95%E9%87%8D%E5%86%99%E3%80%81%E7%9B%B8%E7%AD%89%E6%80%A7%E6%B5%8B%E8%AF%95%E5%92%8C%E7%BB%A7%E6%89%BF/"/>
    <id>http://www.junqson.xin/2017/10/26/【笔记】equals方法重写、相等性测试和继承/</id>
    <published>2017-10-26T15:05:44.000Z</published>
    <updated>2018-02-22T10:07:57.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【笔记】equals方法重写、相等性测试和继承"><a href="#【笔记】equals方法重写、相等性测试和继承" class="headerlink" title="【笔记】equals方法重写、相等性测试和继承"></a>【笔记】equals方法重写、相等性测试和继承</h1><h3 id="一、equals方法重写"><a href="#一、equals方法重写" class="headerlink" title="一、equals方法重写"></a>一、equals方法重写</h3><p>Object类中的equals方法用于检测两个对象是否相等，默认操作为检测两个对象是否具有相同的引用。在Object的子类中一般覆盖equals方法（比如String类），多用于检测两个对象的状态是否相等。<br>重写equals方法，一般采取以下步骤：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">public booleanequals(Object other)&#123;</div><div class="line">    //如果两个对象具有相同的引用则返回true，这是一条优化</div><div class="line">    if (this==other) return true;</div><div class="line">    //如果other为null，返回false</div><div class="line">    if (other==null) return false;</div><div class="line">    //如果两个对象不属于同一个类，返回false</div><div class="line">    if (getClass()!=other.getClass()) return false;</div><div class="line">    //现在可以确定两个对象属于同一个类，进行类型转换，假设this属于Person类</div><div class="line">    Person oth=(Person)other;</div><div class="line">    //依次判断实例域是否相等</div><div class="line">    return field1.equals(oth.field1)&amp;&amp;(field2==oth.field2);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在覆盖equals方法时，必须使方法名和形参列表和父类一致，由方法名和参数列表组成的方法签名在方法重载起到关键作用，意味着以下写法是不允许的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">public boolean equals(Object oth)&#123;&#125;</div><div class="line">public int equals(Object oth)&#123;&#125;</div></pre></td></tr></table></figure>
<p>我们可以使用@Override来标记被重写的方法，如果方法没有被成功重写，则会给出错误报告，这是一个有效避免错误的小技巧。<br>在判断实例域时，当实例域为对象时应该使用Objects.equals方法，以避免空指针异常，比如上面代码最后一行应改为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">return Objects.equals(field1,field2)&amp;&amp;(field2==oth.field2);</div></pre></td></tr></table></figure>
<p>使用该方法需要导入java.util.Objects,如果两个参数都为null，返回true；如果仅有一个为null，返回false，否则调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">para1.equals(para2);</div></pre></td></tr></table></figure>
<p>该方法源码实现摘录如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public static boolean equals(Object a,Object b)&#123;</div><div class="line"></div><div class="line">    return (a == b) || (a != null &amp;&amp; a.equal=s(b)); </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="二、相等测试和继承"><a href="#二、相等测试和继承" class="headerlink" title="二、相等测试和继承"></a>二、相等测试和继承</h3><p>如果两个参数不属于一个类，问题就会变得复杂。很多人单纯使用instanceof进行测试：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if(!(otherinstanceof thisObj)) return false;</div></pre></td></tr></table></figure></p>
<p>不过这么做并没有解决other是thisObj子类的对象的问题，而且违反了equals方法的对称性，Java语言规范要求equals方法的对称性：当且仅当x.equals(y);返回true，y.equals(x);也应该返回true。如果son和父类father共同的域相等且子类中重写了equals方法，按照（一）中的方法，faher.equals(son)会返回true，而son.equals(father)则会返回false，这显然是不合适的。<br>为了改进这个问题，写出更完美的equals方法，可以进行以下判断：</p>
<ul>
<li>如果相等的概念由父类决定，可以使用instanceof进行检测，这样还有利于检测由父类派生出的多个子类的对象之间的相等性。</li>
<li>如果相等的概念由子类决定，equals方法的对称性强制使用getClass()进行检测。</li>
</ul>
<p>在对代码进行修改时，如果相等的概念由子类决定则（一）中代码保持不变。如果相等的概念由父类决定，那么（一）中在判断完other不为null后的第三步改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if(!(otherinstanceof Person)) return false;</div></pre></td></tr></table></figure></p>
<hr>
<p>2017.7.31 18:00第一次编辑</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;【笔记】equals方法重写、相等性测试和继承&quot;&gt;&lt;a href=&quot;#【笔记】equals方法重写、相等性测试和继承&quot; class=&quot;headerlink&quot; title=&quot;【笔记】equals方法重写、相等性测试和继承&quot;&gt;&lt;/a&gt;【笔记】equals方法重写、相等
    
    </summary>
    
      <category term="Java" scheme="http://www.junqson.xin/categories/Java/"/>
    
    
      <category term="JavaSE" scheme="http://www.junqson.xin/tags/JavaSE/"/>
    
  </entry>
  
</feed>
